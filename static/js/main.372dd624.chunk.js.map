{"version":3,"sources":["App.jsx","helpers.js","index.js"],"names":["assoc","one","few","many","pokemons","size","limit","result","length","randInt","Math","floor","random","indexOf","push","getRandomIntArray","reduce","acc","id","doubledPokemons","shuffle","PokemonCard","index","flipCard","isFlipped","onClick","className","src","alt","App","useState","opened","setOpened","matched","setMatched","setWon","moves","setMoves","useEffect","setTimeout","firstPokemon","secondPokemon","prev","includes","num","Intl","PluralRules","select","getPluralString","map","key","window","location","reload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAKMA,G,MAAQ,CACZC,IAAK,qBACLC,IAAK,2BACLC,KAAM,mCAIFC,ECZ2B,WAE/B,IAFyD,IAAzBC,EAAwB,uDAAjB,EAAGC,EAAc,uDAAN,EAC5CC,EAAS,GACRA,EAAOC,OAASH,GAAM,CAC3B,IAAII,EAAUC,KAAKC,MAAMD,KAAKE,SAAWN,EAAQ,IAChB,IAA7BC,EAAOM,QAAQJ,IAAiBF,EAAOO,KAAKL,GAElD,OAAOF,EDKcQ,CAAkB,EAAG,KACZC,QAAO,SAACC,EAAKC,GAC3C,MAAM,GAAN,mBAAWD,GAAX,CAAgB,CAAEC,UACjB,IACGC,EAAkBC,IAAQ,GAAD,mBAAKhB,GAAL,YAAkBA,KAwDjD,SAASiB,EAAT,GAA0D,IAAnCH,EAAkC,EAAlCA,GAAII,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UAC1C,OACE,yBACEC,QAAS,kBAAMF,EAASD,IACxBI,UAAS,eAAUF,EAAY,UAAY,KAE3C,yBAAKE,UAAU,SACb,yBAAKA,UAAU,SACb,yBACEC,IAAG,wDAAmDT,EAAnD,QACHU,IAAI,aAGR,yBAAKF,UAAU,QAAf,OAMOG,MAzEf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,OAGSJ,oBAAS,GAHlB,mBAGDK,GAHC,aAIaL,mBAAS,GAJtB,mBAINM,EAJM,KAICC,EAJD,KAMbC,qBAAU,WACc,IAAlBP,EAAOvB,QAAc+B,YAAW,kBAAMP,EAAU,MAAK,OACxD,CAACD,IAEJO,qBAAU,WACR,KAAIP,EAAOvB,OAAS,GAApB,CACA,IAAMgC,EAAerB,EAAgBY,EAAO,IACtCU,EAAgBtB,EAAgBY,EAAO,IACzCS,EAAatB,KAAOuB,EAAcvB,IACpCgB,GAAW,SAACQ,GAAD,4BAAcA,GAAd,CAAoBF,EAAatB,WAC7C,CAACa,IAEJO,qBAAU,WACJlC,EAASI,SAAWyB,EAAQzB,QAAQ+B,YAAW,kBAAMJ,GAAO,KAAO,OACtE,CAACF,IAEJ,IAAMV,EAAW,SAACD,GACZS,EAAOY,SAASrB,KACpBU,GAAU,SAACU,GAAD,4BAAcA,GAAd,CAAoBpB,OAC9Be,GAAS,SAACK,GAAD,OAAUA,EAAO,OAO5B,OACE,yBAAKhB,UAAU,OACb,yBAAKA,UAAU,SACZU,EADH,IC1CyB,SAACQ,EAAK5C,GAEnC,OAAOA,EADM,IAAI6C,KAAKC,YAAY,SAASC,OAAOH,ID0CnCI,CAAgBZ,EAAOpC,IAElC,yBAAK0B,UAAU,SACZP,EAAgB8B,KAAI,WAAS3B,GAAW,IAAjBJ,EAAgB,EAAhBA,GAClBM,GAAY,EAGhB,OAFIO,EAAOY,SAASrB,KAAQE,GAAY,GACpCS,EAAQU,SAASzB,KAAKM,GAAY,GAEpC,kBAACH,EAAD,eAAa6B,IAAK5B,GAAW,CAAEJ,KAAII,QAAOC,WAAUC,mBAI1D,4BAAQE,UAAU,oBAAoBD,QAnBxB,WAChB0B,OAAOC,SAASC,WAkBd,2CE5DNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.372dd624.chunk.js","sourcesContent":["import shuffle from \"lodash.shuffle\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { getRandomIntArray, getPluralString } from \"./helpers\";\n\nconst assoc = {\n  one: \"ход\",\n  few: \"хода\",\n  many: \"ходов\",\n};\n\nconst randomIdsArray = getRandomIntArray(6, 300);\nconst pokemons = randomIdsArray.reduce((acc, id) => {\n  return [...acc, { id }];\n}, []);\nconst doubledPokemons = shuffle([...pokemons, ...pokemons]);\n\nfunction App() {\n  const [opened, setOpened] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [won, setWon] = useState(false);\n  const [moves, setMoves] = useState(0);\n\n  useEffect(() => {\n    if (opened.length === 2) setTimeout(() => setOpened([]), 700);\n  }, [opened]);\n\n  useEffect(() => {\n    if (opened.length < 2) return;\n    const firstPokemon = doubledPokemons[opened[0]];\n    const secondPokemon = doubledPokemons[opened[1]];\n    if (firstPokemon.id === secondPokemon.id)\n      setMatched((prev) => [...prev, firstPokemon.id]);\n  }, [opened]);\n\n  useEffect(() => {\n    if (pokemons.length === matched.length) setTimeout(() => setWon(true), 700);\n  }, [matched]);\n\n  const flipCard = (index) => {\n    if (opened.includes(index)) return;\n    setOpened((prev) => [...prev, index]);\n    setMoves((prev) => prev + 1);\n  };\n\n  const playAgain = () => {\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"moves\">\n        {moves} {getPluralString(moves, assoc)}\n      </div>\n      <div className=\"cards\">\n        {doubledPokemons.map(({ id }, index) => {\n          let isFlipped = false;\n          if (opened.includes(index)) isFlipped = true;\n          if (matched.includes(id)) isFlipped = true;\n          return (\n            <PokemonCard key={index} {...{ id, index, flipCard, isFlipped }} />\n          );\n        })}\n      </div>\n      <button className=\"play-again-button\" onClick={playAgain}>\n        Еще раз\n      </button>\n    </div>\n  );\n}\n\nfunction PokemonCard({ id, index, flipCard, isFlipped }) {\n  return (\n    <div\n      onClick={() => flipCard(index)}\n      className={`card ${isFlipped ? \"flipped\" : \"\"}`}\n    >\n      <div className=\"inner\">\n        <div className=\"front\">\n          <img\n            src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\n            alt=\"pokemon\"\n          />\n        </div>\n        <div className=\"back\">?</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export const getRandomIntArray = (size = 1, limit = 1) => {\r\n  const result = [];\r\n  while (result.length < size) {\r\n    let randInt = Math.floor(Math.random() * limit + 1);\r\n    if (result.indexOf(randInt) === -1) result.push(randInt);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getPluralString = (num, assoc) => {\r\n  const form = new Intl.PluralRules(\"ru-RU\").select(num);\r\n  return assoc[form];\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}